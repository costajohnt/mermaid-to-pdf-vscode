name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test (Node ${{ matrix.node-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x]
        # Add other platforms after fixing tests
        # include:
        #   - os: windows-latest
        #     node-version: 18.x
        #   - os: macos-latest
        #     node-version: 18.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Verify build output
      run: |
        echo "Checking build output..."
        if [ ! -d "out" ]; then
          echo "Build failed: out directory not found"
          exit 1
        fi
        if [ ! -f "out/extension.js" ]; then
          echo "Build failed: extension.js not found"
          exit 1
        fi
        echo "Build output verified successfully"
      shell: bash
      
    - name: Run tests
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          xvfb-run -a npm test
        else
          npm test
        fi
      env:
        NODE_ENV: test
      shell: bash
      timeout-minutes: 10
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          test-results/
          coverage/
        retention-days: 7
      
    - name: Package extension
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
      run: npx @vscode/vsce package
      
    - name: Verify VSIX package
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
      run: |
        echo "Verifying VSIX package..."
        VSIX_FILE=$(ls *.vsix | head -n 1)
        if [ -z "$VSIX_FILE" ]; then
          echo "Package failed: No VSIX file found"
          exit 1
        fi
        echo "VSIX package created: $VSIX_FILE"
        unzip -l "$VSIX_FILE" | grep -E "(extension.js|package.json)" || exit 1
        echo "VSIX package verified successfully"
      shell: bash
      
    - name: Upload VSIX artifact
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18.x'
      uses: actions/upload-artifact@v4
      with:
        name: mermaid-to-pdf-extension
        path: '*.vsix'
        retention-days: 30

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for security vulnerabilities
      run: npm audit --production
      continue-on-error: true
      
    - name: Check bundle size
      run: |
        npm run compile
        echo "Extension size analysis:"
        du -sh out/
        find out -name "*.js" -exec ls -lh {} \; | head -20
      
    - name: TypeScript strict check
      run: npx tsc --noEmit --strict
      continue-on-error: true